on:
  workflow_call:
    inputs:
      architecture:
        required: true
        type: string
        description: Architecture string, for example aarch64
      runner:
        required: true
        type: string
        description: The runner to execute the build on, for example ubuntu-latest
      kernels:
        required: true
        type: string
        description: Stringified JSON string of kernels, for example '[ "debian", "fedora" ]'

jobs:
  test-kernel:
    name: Kernel
    strategy:
      fail-fast: false
      matrix:
        kernel_flavor: ${{ fromJSON(inputs.kernels) }}
    runs-on: ${{ inputs.runner }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Install packages needed for testing
      run: |
        sudo apt-get update
        sudo apt-get install -y --no-install-recommends \
        gcc-aarch64-linux-gnu \
        libc6-dev-arm64-cross \
        parallel \
        qemu-system-x86 \
        qemu-system-arm \
        qemu-user-static
      env:
        DEBIAN_FRONTEND: noninteractive
    - name: Get Env
      run: echo "ELASTIC_EBPF_VERSION=$(cat VERSION)" >> $GITHUB_ENV && echo "PWD=$(pwd)" >> $GITHUB_ENV
    - name: Download Build Artifacts
      uses: actions/download-artifact@v3
      with:
        name: elastic-ebpf-${{ inputs.architecture }}
        path: ${{ env.PWD }}/artifacts
    - name: Untar
      run: cd artifacts && tar -zxf elastic-ebpf-${ELASTIC_EBPF_VERSION}-SNAPSHOT.tar.gz
    - name: Install Go
      uses: actions/setup-go@v3
      with:
        go-version: '1.17'
    - name: Run tests
      run: make run-multikernel-test IMG_FILTER=${{ matrix.kernel_flavor }} ARCH=${{ inputs.architecture }} EVENTSTRACE_PATH=${PWD}/artifacts/bin/EventsTrace
    - name: Archive test summary
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: run-summary-${{ matrix.kernel_flavor }}-${{ inputs.architecture }}.txt
        path: testing/bpf-check-summary.txt
    - name: Archive individual test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: results-${{ matrix.kernel_flavor }}-${{ inputs.architecture }}
        path: testing/results
