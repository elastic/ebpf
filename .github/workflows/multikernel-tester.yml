name: Multi Kernel Testing
on: [ pull_request ]

jobs:
  multikernel_tester:
    strategy:
      matrix:
        kernel_flavor: [ amazonlinux2, debian, fedora, kali1, kali3, kali4, kali5-7, kali8-9 ]
    runs-on: ubuntu-latest
    steps:
    - name: Running on Kernel Flavor ${{ matrix.kernel_flavor }}
      run: echo "Running on Kernel Flavor ${{ matrix.kernel_flavor }}"
    - name: Preset directories
      run: sudo mkdir -p /kernel-images/${{ matrix.kernel_flavor }} && sudo chown -fR $USER:$USER /kernel-images
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Setup Kernel Image cache
      uses: actions/cache@v3
      with:
        path: /kernel-images
        key: ${{ matrix.kernel_flavor }}-kernel-images-v2
        restore-keys: ${{ matrix.kernel_flavor }}-kernel-images-v2
    - id: 'auth'
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: '${{ secrets.ACTIONS_GCP_JSON_CREDENTIALS }}'
    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v0'
    - name: Sync Kernel Images from GS
      run: gsutil -m rsync -r gs://ebpf-ci-kernel-images/${{ matrix.kernel_flavor}} /kernel-images/${{ matrix.kernel_flavor }}
    - name: Install packages
      run: |
        sudo DEBIAN_FRONTEND=noninteractive apt-get update && \
        sudo DEBIAN_FRONTEND=noninteractive apt-get install -y \
        gcc-9 \
        g++-9 \
        make \
        bmake \
        m4 \
        build-essential \
        autoconf \
        automake \
        wget \
        linux-tools-`uname -r` linux-headers-`uname -r` \
        llvm-11 \
        clang-11 \
        libz-dev \
        curl \
        parallel \
        golang-go \
        qemu-system
    - name: Install cmake
      run: sudo wget -qO- "https://cmake.org/files/v3.22/cmake-3.22.1-linux-`arch`.tar.gz" | sudo tar --strip-components=1 -xz -C /usr/local
    - name: Update refs
      run: sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-11 1 && sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-11 1 && sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 1 && sudo update-alternatives --install /usr/bin/llc llc /usr/bin/llc-11 1 && sudo update-alternatives --install /usr/bin/llvm-strip llvm-strip /usr/bin/llvm-strip-11 1
    - name: Build ebpf
      run: export C_INCLUDE_PATH=/usr/include/`arch`-linux-gnu && mkdir -p build && cd build && cmake -DBUILD_STATIC_EVENTSTRACE=TRUE ../ && make
    - name: Run Tests
      run: cd testing && ./run_tests.sh -c /kernel-images
